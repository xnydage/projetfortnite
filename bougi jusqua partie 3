import curses
import random

# Exemple de carte
map_data = [
    [0, 0, 0, 1, 1],
    [0, 0, 0, 0, 1],
    [1, 1, 0, 0, 0],
    [0, 0, 0, 0, 0]
]

# Dictionnaire associant les nombres à des caractères
char_dict = {0: ' ', 1: '#'}

# Fonction pour afficher la carte
def display_map(stdscr, m, d):
    for i, row in enumerate(m):
        for j, value in enumerate(row):
            stdscr.addstr(i, j, d[value])
    stdscr.refresh()

# Fonction pour créer le personnage
def create_perso(position):
    return {"char": "o", "x": position[0], "y": position[1], "score": 0}

# Fonction pour afficher la carte, le personnage et les objets
def display_map_char_and_objects(stdscr, m, d, p, objects):
    display_map(stdscr, m, d)
    stdscr.addstr(p["y"], p["x"], p["char"])

    for obj in objects:
        x, y = obj
        stdscr.addstr(y, x, ".")

    # Afficher le score du joueur
    stdscr.addstr(len(m) + 1, 0, f"Score: {p['score']}")
    stdscr.refresh()

# Fonction pour mettre à jour la position du personnage
def update_p(letter, player, game_map, objects):
    x, y = player["x"], player["y"]

    if letter == "z" and y > 0:
        player["y"] -= 1
    elif letter == "s" and y < len(game_map) - 1:
        player["y"] += 1
    elif letter == "q" and x > 0:
        player["x"] -= 1
    elif letter == "d" and x < len(game_map[0]) - 1:
        player["x"] += 1

    # Ramasser les objets
    if (x, y) in objects:
        objects.remove((x, y))
        player["score"] += 1

# Fonction pour vérifier si la position est valide
def is_valid_position(x, y, game_map):
    return 0 <= y < len(game_map) and 0 <= x < len(game_map[0]) and game_map[y][x] != 1

# Fonction pour créer des objets
def create_objects(nb_objects, game_map):
    objects = set()

    while len(objects) < nb_objects:
        x = random.randint(0, len(game_map[0]) - 1)
        y = random.randint(0, len(game_map) - 1)

        if game_map[y][x] == 0:
            objects.add((x, y))

    return objects

# Boucle principale
def main(stdscr):
    curses.curs_set(0)
    stdscr.clear()

    game_map = map_data
    char_dict = {0: ' ', 1: '#'}
    player = create_perso((0, 0))

    # Créez des objets sur la carte
    objects = create_objects(5, game_map)

    while True:
        display_map_char_and_objects(stdscr, game_map, char_dict, player, objects)

        key = stdscr.getch()
        stdscr.erase()

        if key == ord("a"):
            break
        elif key in [ord("z"), ord("s"), ord("q"), ord("d")]:
            update_p(chr(key), player, game_map, objects)

            if not is_valid_position(player["x"], player["y"], game_map):
                stdscr.addstr(len(game_map) + 2, 0, "Erreur : déplacement invalide")

# Exécution du programme
curses.wrapper(main)
